<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE generatorConfiguration        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"><!-- 配置Run As Maven build : Goals 参数 : mybatis-generator:generate -Dmybatis.generator.overwrite=true --><!-- 配置 tableName,使用 Run As Maven build 生成 mapper model 层 --><generatorConfiguration>    <!-- 配置文件路径 -->    <properties url="${mybatis.generator.generatorConfig.properties}"/>    <!--<properties resource="generatorConfig.properties" />-->    <!-- 数据库驱动包路径 -->    <classPathEntry location="${drive.class.path}"/>    <context id="DB2Tables">        <!-- 关闭注释 -->        <commentGenerator>            <property name="suppressAllComments" value="true"/><!-- 是否取消注释 -->        </commentGenerator>        <!-- 数据库连接信息 -->        <jdbcConnection driverClass="${jdbc.driver}" connectionURL="${jdbc.url}" userId="${jdbc.username}"                        password="${jdbc.password}">        </jdbcConnection>        <!-- 类型转换 -->        <javaTypeResolver>            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->            <property name="forceBigDecimals" value="false"/>        </javaTypeResolver>        <!-- 生成的model 包路径 -->        <javaModelGenerator targetPackage="${model.package}" targetProject="${target.project}">            <property name="enableSubPackages" value="true"/>            <property name="trimStrings" value="true"/>        </javaModelGenerator>        <!-- 生成xml mapper文件 路径 -->        <sqlMapGenerator targetPackage="${xml.mapper.package}" targetProject="${target.project}">            <property name="enableSubPackages" value="true"/>        </sqlMapGenerator>        <!-- 生成的Dao接口 的包路径 -->        <javaClientGenerator type="XMLMAPPER" targetPackage="${dao.package}" targetProject="${target.project}">            <property name="enableSubPackages" value="true"/>        </javaClientGenerator>        <!-- 对应数据库表名 -->        <!--        <table tableName="TB_ROLE_INFO" domainObjectName="Role">        	<generatedKey column="role_id" sqlStatement="select ROLE_SEQ.nextval from dual"  />            <columnOverride column="role_id" jdbcType="DECIMAL" javaType="java.lang.Long" />            <columnOverride column="type" jdbcType="DECIMAL" javaType="java.lang.Integer" />       	    <columnOverride column="status" jdbcType="DECIMAL" javaType="java.lang.Integer" />       	    <columnOverride column="creator_id" jdbcType="DECIMAL" javaType="java.lang.Long" />       	    <columnOverride column="last_op_id" jdbcType="DECIMAL" javaType="java.lang.Long" />       	    <columnOverride column="create_time" jdbcType="TIMESTAMP" />       	    <columnOverride column="last_op_time" jdbcType="TIMESTAMP" />		</table> -->        <table tableName="login_register_user" domainObjectName="LoginRegisterUser">            <!--<generatedKey column="user_id" sqlStatement="select PB_TERM_KEY_SEQ.nextval from dual"  />-->            <!--<columnOverride column="userId" jdbcType="DECIMAL" javaType="java.lang.Long" />-->        </table>    </context></generatorConfiguration>